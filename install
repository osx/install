#!/System/Library/Frameworks/Ruby.framework/Versions/Current/usr/bin/ruby

require 'pathname'

# This script installs to /usr/local only.
HOMEBREW_PREFIX = Pathname.new '/usr/local'

# Bang is nested inside Homebrew.
BANG_PREFIX = HOMEBREW_PREFIX.join('Bang')
BANG_REPO = 'https://github.com/osxuniverse/bang'

# The core galaxy.
GALAXY_ANDROMEDA = 'osxuniverse/andromeda'

module Tty extend self
  def blue; bold 34; end
  def white; bold 39; end
  def red; underline 31; end
  def yellow; underline 33; end
  def reset; escape 0; end

  private

  def bold n
    escape "1;#{n}"
  end

  def underline n
    escape "4;#{n}"
  end

  def escape n
    "\033[#{n}m" if $stdout.tty?
  end
end

class Array
  def shell_s
    cp = dup
    first = cp.shift
    cp.map{ |arg| arg.gsub " ", "\\ " }.unshift(first) * " "
  end
end

def alert *args
  puts "#{Tty.blue}==>#{Tty.white} #{args.shell_s}#{Tty.reset}"
end

def tip title, msg
  puts "#{Tty.yellow}#{title}#{Tty.reset}: #{msg}"
end

def warn msg
  $stderr.puts "#{Tty.red}Warning#{Tty.reset}: #{msg}"
end

def system *args
  abort "Failed during: #{args.shell_s}" unless Kernel.system *args
end

def sudo *args
  alert '/usr/bin/sudo', *args
  system '/usr/bin/sudo', *args
end

# Invalidate sudo timestamp before exiting.
at_exit { Kernel.system '/usr/bin/sudo', '-k' }

# The block form of Dir.chdir fails later if Dir.CWD doesn't exist which I
# guess is fair enough. Also sudo prints a warning message for no good reason.
Dir.chdir '/usr'

####################################################################### script
alert 'Bang resources...'
tip "#{HOMEBREW_PREFIX}/bin/bang", 'The executable'
tip "#{BANG_PREFIX}/", 'The path to the library'
tip "#{HOMEBREW_PREFIX}/Galaxies/", 'The path to all discovered galaxies'
tip "#{HOMEBREW_PREFIX}/Universe/", 'Contains configurations and other resources for installed software'
tip "#{HOMEBREW_PREFIX}/Universe/shell/", 'Sourceable configurations and functions for inclusion in your shell configuration'
tip "#{HOMEBREW_PREFIX}/{bin,etc,opt,...}", 'The standard Homebrew paths are used for binaries and configurations, where applicable'

# This would be done by the Homebrew installer, but we can't assume that 
# Homebrew is already installed. So we'll do some minimal setup just like 
# Homebrew would do to enable us to share their environment.
unless HOMEBREW_PREFIX.directory?
  sudo '/bin/mkdir', HOMEBREW_PREFIX.to_s
  sudo '/bin/chmod', 'g+rwx', HOMEBREW_PREFIX.to_s
  sudo '/usr/bin/chgrp', 'admin', HOMEBREW_PREFIX.to_s
end

# Treat BANG_PREFIX as if it was any other directory created by Homebrew.
sudo '/bin/mkdir', BANG_PREFIX.to_s unless BANG_PREFIX.directory?
sudo '/bin/chmod', 'g+rwx', BANG_PREFIX.to_s

alert 'Downloading and installing Bang...'
Dir.chdir BANG_PREFIX.to_s do
  # Just like Homebrew, we do it in four steps to avoid merge errors when
  # reinstalling.
  system 'git', 'init', '-q'

  # Just like Homebrew, `git remote add` will fail if the remote is defined
  # in the global config.
  system 'git', 'config', 'remote.origin.url', BANG_REPO
  system 'git', 'config', 'remote.origin.fetch', '+refs/heads/*:refs/remotes/origin/*'

  system 'git', 'fetch', 'origin', 'master:refs/remotes/origin/master'

  system 'git', 'reset', '--hard', 'origin/master'
end

tip 'bang', "Added to #{HOMEBREW_PREFIX}/bin"
Dir.chdir HOMEBREW_PREFIX.join('bin').to_s do
  system 'ln', '-sf', '../Bang/bin/bang', 'bang'
end

alert 'Discovering the Andromeda galaxy...'
Dir.chdir BANG_PREFIX.join('bin').to_s do
  system 'bang', 'discover', GALAXY_ANDROMEDA.to_s
end

# Even before Homebrew is installed, it's a good idea to add this to your path
# so that `bang` can be run from anywhere.
warn "#{HOMEBREW_PREFIX}/bin is not in your PATH." unless ENV['PATH'].split(':').include? "#{HOMEBREW_PREFIX}/bin"

alert 'Installation successful!'
